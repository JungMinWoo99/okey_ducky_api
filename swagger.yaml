openapi: 3.0.3
info:
  title: "AI 교감 메이트 API"
  version: "1.2"
  description: "부모의 마음으로 아이 곁을 지키는 AI 교감 메이트 API 명세서 (v1.2, ERD v5 반영)"

servers:
  - url: "http://127.0.0.1:8000"
    description: "로컬 개발 서버 (FastAPI)"
  - url: "https://your-domain.com/api"
    description: "프로덕션 서버"

tags:
  - name: "인증 (Authentication)"
    description: "부모(사용자) 회원가입 및 로그인 API"
  - name: "사용자 (Parent & Child)"
    description: "부모 및 아이 정보 관리 API"
  - name: "대화 및 리포트 (Dialogue & Reports)"
    description: "아이-로봇 대화 로그 및 AI 분석 리포트 API"
  - name: "로봇 (Device)"
    description: "등록된 로봇의 상태 조회 및 관리 API"
  - name: "실시간 통신 (Socket.io / WebRTC)"
    description: "실시간 영상 스트리밍 및 명령/알림 관련"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "로그인 API를 통해 발급받은 Access Token"

  schemas:
    # --- 공통 스키마 ---
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
          description: "에러 식별 코드"
        message:
          type: string
          description: "에러 상세 설명"

    # --- 인증 스키마 (R1 수정) ---
    ParentRegisterRequest:
      type: object
      properties:
        parent_name:
          type: string
          description: "부모 이름"
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - parent_name
        - email
        - password

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string

    # --- 사용자 (부모/아이) 스키마 (R2 신규/수정) ---
    ParentInfoResponse:
      type: object
      description: "부모 계정 정보"
      properties:
        user_id:
          type: integer
        parent_name:
          type: string
        email:
          type: string
          format: email
      required:
        - user_id
        - parent_name
        - email

    ParentUpdateRequest:
      type: object
      description: "부모 정보 수정"
      properties:
        parent_name:
          type: string
          description: "변경할 부모 이름 (선택)"
        password:
          type: string
          format: password
          description: "변경할 새 비밀번호 (선택)"

    ChildRegisterRequest:
      type: object
      description: "아이 및 로봇 등록 요청 (R2-1)"
      properties:
        name:
          type: string
          description: "아이 이름"
        gender:
          type: string
          description: "성별"
          enum: ["남아", "여아"]
        birth_date:
          type: string
          format: date
          description: "생년월일"
          example: "2018-05-10"
        school:
          type: string
          description: "학교 (선택)"
        serial_number:
          type: string
          description: "연동할 로봇 시리얼 번호"
      required:
        - name
        - gender
        - birth_date
        - serial_number

    ChildInfoResponse:
      type: object
      description: "아이 및 연동된 로봇 정보"
      properties:
        child_id:
          type: integer
        name:
          type: string
        gender:
          type: string
          description: "성별"
          enum: ["남아", "여아"]
        birth_date:
          type: string
          format: date
        school:
          type: string
        robot:
          $ref: "#/components/schemas/RobotInfoResponse"

    ChildUpdateRequest:
      type: object
      description: "아이 정보 수정 (로봇 시리얼 변경 불가)"
      properties:
        name:
          type: string
        gender:
          type: string
          description: "성별"
          enum: ["남아", "여아"]
        birth_date:
          type: string
          format: date
        school:
          type: string

    # --- 로봇 스키마 (ERD V5 수정 반영) ---
    RobotInfoResponse:
      type: object
      description: "연동된 로봇의 상세 정보"
      properties:
        robot_id:
          type: integer
        child_id:
          type: integer
          description: "연결된 아이 ID"
        serial_number:
          type: string
        status:
          type: string
          description: "로봇 현재 연결 상태 (e.g., online, offline)"
      required:
        - robot_id
        - child_id
        - serial_number
        - status

    # --- 대화 및 리포트 스키마 (ERD V5 수정 반영) ---
    LogDialogueRequest:
      type: object
      description: "로봇이 대화 로그(1건)를 서버에 전송 (ERD V5)"
      properties:
        speaker:
          type: string
          description: "발화자"
          enum: [child, robot_ai, robot_parent]
        message:
          type: string
          description: "발화 텍스트"
      required:
        - speaker
        - message

    DialogueLogResponse:
      type: object
      description: "타임스탬프가 포함된 개별 대화 로그 (R3-1 수정)"
      properties:
        timestamp:
          type: string
          format: date-time
        speaker:
          type: string
          enum: [child, robot_ai, robot_parent]
        message:
          type: string
          
    DailyLogResponse:
      type: object
      description: "특정 날짜의 전체 대화 요약 및 로그 (R3-1)"
      properties:
        date:
          type: string
          format: date
        daily_summary:
          type: string
          description: "그날 전체 대화에 대한 AI 요약 (DailyReport)"
        logs:
          type: array
          items:
            $ref: "#/components/schemas/DialogueLogResponse"

    DailyReportResponse:
      type: object
      description: "특정 날짜의 AI 분석 리포트 (R3-2)"
      properties:
        date:
          type: string
          format: date
        analysis_summary:
          type: string
          description: "AI가 분석한 주요 대화 주제 요약"
        positive_keywords:
          type: array
          items:
            type: string
          example: ["공룡", "신난다", "좋아"]
        special_notes:
          type: array
          items:
            type: string
          example: ["'할머니 보고 싶다' 3회 언급"]

paths:
  # --- 인증 (Authentication) ---
  /auth/register:
    post:
      tags: ["인증 (Authentication)"]
      summary: "부모(사용자) 회원 가입 (R1 수정)"
      description: "부모의 이름, 이메일, 비밀번호로 계정을 생성합니다. (아이 등록은 /users/child 에서 별도 수행)"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParentRegisterRequest"
      responses:
        "201":
          description: "회원가입 성공"
        "409":
          description: "이미 존재하는 이메일"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/login:
    post:
      tags: ["인증 (Authentication)"]
      summary: "부모(사용자) 로그인"
      description: "이메일과 비밀번호로 로그인하고 Access Token을 발급받습니다."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: "로그인 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: "인증 실패"

  # --- 사용자 (Parent & Child) (R2 신규/수정) ---
  /users/me:
    get:
      tags: ["사용자 (Parent & Child)"]
      summary: "내 정보 (부모) 조회 (R1 수정)"
      description: "현재 로그인된 부모 계정의 정보를 조회합니다."
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentInfoResponse"
        "401":
          description: "인증 필요"

    put:
      tags: ["사용자 (Parent & Child)"]
      summary: "내 정보 (부모) 수정 (R1 수정)"
      description: "현재 로그인된 부모 계정의 이름 또는 비밀번호를 수정합니다."
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParentUpdateRequest"
      responses:
        "200":
          description: "수정 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentInfoResponse"
        "401":
          description: "인증 필요"

    delete:
      tags: ["사용자 (Parent & Child)"]
      summary: "회원 탈퇴"
      description: "현재 로그인된 부모 계정과, 연동된 아이, 로봇 정보를 모두 삭제합니다."
      security:
        - bearerAuth: []
      responses:
        "204":
          description: "회원 탈퇴 성공"
        "401":
          description: "인증 필요"

  /users/child:
    post:
      tags: ["사용자 (Parent & Child)"]
      summary: "아이 등록 (및 로봇 연동) (R2 신규)"
      description: "부모 계정에 아이 정보를 등록하고, 로봇 시리얼 번호를 입력하여 아이와 로봇을 1:1로 연동합니다. (계정당 1명/1대)"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChildRegisterRequest"
      responses:
        "201":
          description: "아이 및 로봇 등록 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChildInfoResponse"
        "401":
          description: "인증 필요"
        "409":
          description: "이미 아이가 등록되어 있거나, 사용 중인 시리얼 번호"

    get:
      tags: ["사용자 (Parent & Child)"]
      summary: "내 아이 정보 조회 (R2 신규)"
      description: "내 계정에 등록된 아이의 상세 정보와 연동된 로봇 정보를 조회합니다."
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChildInfoResponse"
        "401":
          description: "인증 필요"
        "404":
          description: "등록된 아이가 없음"

    put:
      tags: ["사용자 (Parent & Child)"]
      summary: "내 아이 정보 수정 (R2 신규)"
      description: "내 계정에 등록된 아이의 정보(이름, 성별, 생일, 학교)를 수정합니다."
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChildUpdateRequest"
      responses:
        "200":
          description: "수정 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChildInfoResponse"
        "401":
          description: "인증 필요"
        "404":
          description: "등록된 아이가 없음"

  # --- 대화 및 리포트 (R3 신규) ---
  /reports/log/{date}:
    get:
      tags: ["대화 및 리포트 (Dialogue & Reports)"]
      summary: "일일 대화 로그 조회 (R3-1)"
      description: "특정 날짜(YYYY-MM-DD)를 지정하여, 그날의 AI 요약본(daily_summary)과 전체 대화 로그(logs)를 조회합니다."
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          example: "2025-10-23"
      responses:
        "200":
          description: "조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyLogResponse"
        "401":
          description: "인증 필요"
        "404":
          description: "해당 날짜의 데이터가 없음"

  /reports/analysis/{date}:
    get:
      tags: ["대화 및 리포트 (Dialogue & Reports)"]
      summary: "일일 AI 분석 리포트 조회 (R3-2)"
      description: "특정 날짜(YYYY-MM-DD)를 지정하여, AI가 비동기 분석한 리포트(analysis_summary, keywords, notes)를 조회합니다."
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          example: "2025-10-23"
      responses:
        "200":
          description: "조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyReportResponse"
        "401":
          description: "인증 필요"
        "404":
          description: "해당 날짜의 데이터가 없음"

  # --- 로봇 (Device) (수정) ---
  /robot/me:
    get:
      tags: ["로봇 (Device)"]
      summary: "내 로봇 정보/상태 조회"
      description: "내 아이에게 등록된 로봇의 정보(시리얼, 상태 등)를 조회합니다. (/users/child GET과 동일한 로봇 정보를 반환)"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RobotInfoResponse"
        "401":
          description: "인증 필요"
        "404":
          description: "등록된 로봇이 없음"

    delete:
      tags: ["로봇 (Device)"]
      summary: "로봇 연동 해제"
      description: "내 아이에게 등록된 로봇의 연동을 해제합니다. (아이 정보는 유지됩니다)"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: "연동 해제 성공"
        "401":
          description: "인증 필요"
